[{"id":"wordpress","user_id":"d5f14370-de3d-47d6-b47d-3493ec9e2df2","name":"Wordpress","content":"\"\"\"\ntitle: WordPress Manager\nauthor: Your Name\nauthor_url: https://yourwebsite.com\ndescription: Full control over WordPress content creation and management\nrequired_open_webui_version: 0.5.0\nrequirements: python-wordpress-xmlrpc, requests\nversion: 1.0.0\nlicense: MIT\n\"\"\"\n\nfrom pydantic import BaseModel, Field\nfrom typing import Optional, List\nimport requests\nfrom wordpress_xmlrpc import Client, WordPressPost\nfrom wordpress_xmlrpc.methods.posts import GetPosts, NewPost\n\n\nclass Tools:\n    def __init__(self):\n        self.valves = self.Valves()\n        self.user_valves = self.UserValves()\n\n    class Valves(BaseModel):\n        wp_url: str = Field(\n            \"https://theocconnect.com\",\n            description=\"WordPress site URL (e.g., https://yoursite.com)\",\n        )\n        wp_username: str = Field(\"sin\", description=\"WordPress admin username\")\n        wp_password: str = Field(\n            \"kkmP 5xd6 M5TJ gLuy PcUV gKtQ\",\n            description=\"WordPress application password\",\n        )\n\n    class UserValves(BaseModel):\n        default_status: str = Field(\n            \"publish\", description=\"Post status (draft/publish)\"\n        )\n        default_author: int = Field(1, description=\"Default author ID\")\n\n    async def create_post(\n        self,\n        title: str,\n        content: str,\n        status: Optional[str] = None,\n        categories: Optional[List[int]] = None,\n        tags: Optional[List[int]] = None,\n        featured_image: Optional[int] = None,\n    ) -> dict:\n        \"\"\"\n        Create a new WordPress blog post\n        :param title: Post title\n        :param content: HTML or plain text content\n        :param status: publish/draft (default from UserValves)\n        :param categories: List of category IDs\n        :param tags: List of tag IDs\n        :param featured_image: Media ID for featured image\n        :return: Created post details\n        \"\"\"\n        status = status or self.user_valves.default_status\n\n        wp = Client(\n            f\"{self.valves.wp_url}/xmlrpc.php\",\n            self.valves.wp_username,\n            self.valves.wp_password,\n        )\n\n        post = WordPressPost()\n        post.title = title\n        post.content = content\n        post.post_status = status\n        if categories:\n            post.terms_names = {\"category\": categories}\n        if tags:\n            post.terms_names = {\"post_tag\": tags}\n        if featured_image:\n            post.thumbnail = featured_image\n\n        post_id = wp.call(NewPost(post))\n\n        return {\n            \"id\": post_id,\n            \"url\": f\"{self.valves.wp_url}/?p={post_id}\",\n            \"status\": status,\n        }\n\n    async def create_page(\n        self,\n        title: str,\n        content: str,\n        parent_id: Optional[int] = None,\n        template: Optional[str] = None,\n    ) -> dict:\n        \"\"\"\n        Create a new WordPress page\n        :param title: Page title\n        :param content: HTML content\n        :param parent_id: Parent page ID\n        :param template: Page template\n        :return: Created page details\n        \"\"\"\n        endpoint = f\"{self.valves.wp_url}/wp-json/wp/v2/pages\"\n        headers = {\"Authorization\": f\"Basic {self._get_basic_auth()}\"}\n\n        data = {\n            \"title\": title,\n            \"content\": content,\n            \"status\": self.user_valves.default_status,\n            \"author\": self.user_valves.default_author,\n        }\n\n        if parent_id:\n            data[\"parent\"] = parent_id\n        if template:\n            data[\"template\"] = template\n\n        response = requests.post(endpoint, headers=headers, json=data)\n        response.raise_for_status()\n\n        return response.json()\n\n    async def upload_media(self, file_url: str, title: str) -> dict:\n        \"\"\"\n        Upload media to WordPress\n        :param file_url: URL of file to upload\n        :param title: Media title\n        :return: Media details\n        \"\"\"\n        endpoint = f\"{self.valves.wp_url}/wp-json/wp/v2/media\"\n        headers = {\n            \"Authorization\": f\"Basic {self._get_basic_auth()}\",\n            \"Content-Disposition\": f'attachment; filename=\"{title}\"',\n        }\n\n        response = requests.get(file_url, stream=True)\n        response.raise_for_status()\n\n        upload = requests.post(\n            endpoint, headers=headers, data=response.content, stream=True\n        )\n        upload.raise_for_status()\n\n        return upload.json()\n\n    def _get_basic_auth(self) -> str:\n        \"\"\"Generate Basic Auth token\"\"\"\n        from base64 import b64encode\n\n        creds = f\"{self.valves.wp_username}:{self.valves.wp_password}\"\n        return b64encode(creds.encode()).decode()\n","specs":[{"name":"_get_basic_auth","description":"Generate Basic Auth token","parameters":{"properties":{},"type":"object"}},{"name":"create_page","description":"Create a new WordPress page","parameters":{"properties":{"title":{"description":"Page title","type":"string"},"content":{"description":"HTML content","type":"string"},"parent_id":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Parent page ID"},"template":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"Page template"}},"required":["title","content"],"type":"object"}},{"name":"create_post","description":"Create a new WordPress blog post","parameters":{"properties":{"title":{"description":"Post title","type":"string"},"content":{"description":"HTML or plain text content","type":"string"},"status":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"description":"publish/draft (default from UserValves)"},"categories":{"anyOf":[{"items":{"type":"integer"},"type":"array"},{"type":"null"}],"default":null,"description":"List of category IDs"},"tags":{"anyOf":[{"items":{"type":"integer"},"type":"array"},{"type":"null"}],"default":null,"description":"List of tag IDs"},"featured_image":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"description":"Media ID for featured image"}},"required":["title","content"],"type":"object"}},{"name":"upload_media","description":"Upload media to WordPress","parameters":{"properties":{"file_url":{"description":"URL of file to upload","type":"string"},"title":{"description":"Media title","type":"string"}},"required":["file_url","title"],"type":"object"}}],"meta":{"description":"tools for using wordpress","manifest":{"title":"WordPress Manager","author":"Your Name","author_url":"https://yourwebsite.com","description":"Full control over WordPress content creation and management","required_open_webui_version":"0.5.0","requirements":"python-wordpress-xmlrpc, requests","version":"1.0.0","license":"MIT"}},"access_control":{},"updated_at":1749184224,"created_at":1749181743}]