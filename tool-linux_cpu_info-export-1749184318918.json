[{"id":"linux_cpu_info","user_id":"d5f14370-de3d-47d6-b47d-3493ec9e2df2","name":"System Intelligence Tool","content":"\"\"\"\ntitle: System Intelligence Tool\nauthor: Dr. Wes Caldwell\nauthor_url: https://github.com/musicheardworldwide.com\ndescription: Retrieves full system and environment details including IP, hardware, OS, and runtime info.\nrequired_open_webui_version: 0.5.0\nrequirements: requests, psutil\nversion: 1.1.0\nlicense: MIT\n\"\"\"\n\nimport requests\nimport platform\nimport socket\nimport psutil\nfrom datetime import datetime\nfrom pydantic import BaseModel, Field\nfrom fastapi import Request\n\n\nclass Tools:\n    def __init__(self):\n        \"\"\"Initialize tool with config options.\"\"\"\n        self.valves = self.Valves()\n        self.user_valves = self.UserValves()\n        self.citation = False\n\n    class Valves(BaseModel):\n        \"\"\"Admin-configurable settings.\"\"\"\n\n        api_key: str = Field(\"\", description=\"Optional API key for location service.\")\n\n    class UserValves(BaseModel):\n        \"\"\"User-configurable settings.\"\"\"\n\n        include_location: bool = Field(\n            default=False, description=\"Add geolocation to IP info.\"\n        )\n        show_citation: bool = Field(\n            default=True, description=\"Include source metadata.\"\n        )\n\n    async def get_all_info(\n        self,\n        __user__: dict,\n        __request__: Request,\n        __event_emitter__=None,\n        __metadata__: dict = None,\n        __messages__: list = None,\n        __files__: list = None,\n        __model__: str = None,\n    ) -> str:\n        \"\"\"\n        Collects all system and user metadata including IP, geolocation, hardware specs, OS, memory, CPU, and more.\n\n        Returns:\n            str: Combined system report.\n        \"\"\"\n        try:\n            await __event_emitter__(\n                {\n                    \"type\": \"status\",\n                    \"data\": {\n                        \"description\": \"Gathering system intelligence...\",\n                        \"done\": False,\n                    },\n                }\n            )\n\n            report = []\n            report.append(f\"### üß† System Intelligence Report\")\n            report.append(f\"- **Hostname**: {socket.gethostname()}\")\n            report.append(\n                f\"- **Platform**: {platform.system()} {platform.release()} ({platform.version()})\"\n            )\n            report.append(f\"- **Architecture**: {' '.join(platform.architecture())}\")\n            report.append(f\"- **Processor**: {platform.processor() or 'Unknown'}\")\n            report.append(\n                f\"- **CPU Cores**: Physical: {psutil.cpu_count(logical=False)}, Logical: {psutil.cpu_count(logical=True)}\"\n            )\n            report.append(\n                f\"- **RAM**: {round(psutil.virtual_memory().total / (1024**3), 2)} GB\"\n            )\n            report.append(\n                f\"- **Disk**: {round(psutil.disk_usage('/').total / (1024**3), 2)} GB total\"\n            )\n\n            # Public IP & Optional Location\n            ip_info = requests.get(\"https://api.ipify.org?format=json\").json()\n            ip = ip_info.get(\"ip\", \"Unavailable\")\n            ip_result = f\"### üåê Public IP\\n- **IP Address**: {ip}\"\n\n            if self.user_valves.include_location:\n                geo = requests.get(f\"http://ip-api.com/json/{ip}\").json()\n                ip_result += f\"\\n- **Location**: {geo.get('city', '?')}, {geo.get('country', '?')}\"\n\n            report.append(ip_result)\n\n            if self.user_valves.show_citation:\n                await __event_emitter__(\n                    {\n                        \"type\": \"citation\",\n                        \"data\": {\n                            \"document\": [f\"IP lookup: {ip}\"],\n                            \"metadata\": [\n                                {\n                                    \"date_accessed\": datetime.utcnow().isoformat(),\n                                    \"source\": \"IP Lookup Service\",\n                                }\n                            ],\n                            \"source\": {\n                                \"name\": \"IP Lookup Service\",\n                                \"url\": \"https://api.ipify.org\",\n                            },\n                        },\n                    }\n                )\n\n            await __event_emitter__(\n                {\n                    \"type\": \"status\",\n                    \"data\": {\"description\": \"System info collected.\", \"done\": True},\n                }\n            )\n            return \"\\n\\n\".join(report)\n\n        except Exception as e:\n            await __event_emitter__(\n                {\"type\": \"status\", \"data\": {\"description\": f\"Error: {e}\", \"done\": True}}\n            )\n            return f\"**Error gathering system info**: {e}\"\n","specs":[{"name":"get_all_info","description":"Collects all system and user metadata including IP, geolocation, hardware specs, OS, memory, CPU, and more.\n\nReturns:\nstr: Combined system report.","parameters":{"properties":{},"type":"object"}}],"meta":{"description":"Retrieves full system and environment details including IP, hardware, OS, and runtime info.","manifest":{"title":"System Intelligence Tool","author":"Dr. Wes Caldwell","author_url":"https://github.com/musicheardworldwide.com","description":"Retrieves full system and environment details including IP, hardware, OS, and runtime info.","required_open_webui_version":"0.5.0","requirements":"requests, psutil","version":"1.1.0","license":"MIT"}},"access_control":{},"updated_at":1749071280,"created_at":1748983515}]